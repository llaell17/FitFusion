<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Selecione a data e agende seu treino</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap');

        body {
            font-family: 'Poppins', sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .container {
            max-width: 800px;
            width: 90%;
            background-color: rgba(255, 255, 255, 0.9);
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            padding: 30px;
        }
        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
        }
        .logo {
            width: 120px;
            height: auto;
        }
        h1 {
            font-size: 28px;
            text-align: center;
            flex-grow: 1;
            margin: 0 20px;
            color: #333;
            font-weight: 600;
        }
        .icons {
            font-size: 24px;
        }
        .calendar {
            background-color: white;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            padding: 30px;
        }
        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        .calendar-header button {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: #000000;
            transition: transform 0.3s ease;
        }
        .calendar-header button:hover {
            transform: scale(1.2);
        }
        #currentMonth {
            font-size: 24px;
            font-weight: 600;
            color: #333;
        }
        .weekdays {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 10px;
            text-align: center;
            font-weight: 600;
            margin-bottom: 15px;
            color: #000000;
        }
        .days {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 10px;
        }
        .day {
            aspect-ratio: 1;
            display: flex;
            justify-content: center;
            align-items: center;
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 300;
        }
        .day:hover {
            background-color: #f0f8ff;
            transform: scale(1.1);
        }
        .day.selected {
            background-color: #4a90e2;
            color: white;
            font-weight: 600;
            box-shadow: 0 2px 10px rgba(74, 144, 226, 0.5);
        }
        .actions {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 30px;
        }
        .btn {
            padding: 12px 25px;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
        }
        .btn.primary {
            background-color: #020202;
            color: white;
            box-shadow: 0 4px 15px rgba(74, 144, 226, 0.3);
        }
        .btn.primary:hover {
            background-color: #000000;
            box-shadow: 0 6px 20px rgba(74, 144, 226, 0.4);
        }
        .btn.secondary {
            background-color: #f0f0f0;
            color: #333;
        }
        .btn.secondary:hover {
            background-color: #e0e0e0;
        }
        .btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .container {
            animation: fadeIn 0.5s ease-out;
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <img src="Group_241.png" alt="FitFusion" class="logo">
            <h1>Selecione a data e agende seu treino.</h1>
            <div class="icons">
                <span class="icon" role="img" aria-label="Notifica√ß√µes">üîî</span>
                <span class="icon" role="img" aria-label="Perfil do usu√°rio">üë§</span>
            </div>
        </header>
        <div class="calendar">
            <div class="calendar-header">
                <button id="prevMonth" aria-label="M√™s anterior">&#10094;</button>
                <h2 id="currentMonth">Outubro 2024</h2>
                <button id="nextMonth" aria-label="Pr√≥ximo m√™s">&#10095;</button>
            </div>
            <div class="weekdays">
                <div>DOM</div>
                <div>SEG</div>
                <div>TER</div>
                <div>QUA</div>
                <div>QUI</div>
                <div>SEX</div>
                <div>S√ÅB</div>
            </div>
            <div id="calendarDays" class="days"></div>
            <div class="actions">
                <button id="scheduleButton" class="btn primary" disabled>Agendar treino</button>
                <button id="cancelButton" class="btn secondary" disabled>Cancelar treino</button>
            </div>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const calendarDays = document.getElementById('calendarDays');
            const currentMonthElement = document.getElementById('currentMonth');
            const prevMonthButton = document.getElementById('prevMonth');
            const nextMonthButton = document.getElementById('nextMonth');
            const scheduleButton = document.getElementById('scheduleButton');
            const cancelButton = document.getElementById('cancelButton');

            let currentDate = new Date(2024, 9, 1); 
            let selectedDate = null;

            function updateCalendar() {
                const year = currentDate.getFullYear();
                const month = currentDate.getMonth();
                
                currentMonthElement.textContent = new Intl.DateTimeFormat('pt-BR', { month: 'long', year: 'numeric' }).format(currentDate);

                const firstDay = new Date(year, month, 1);
                const lastDay = new Date(year, month + 1, 0);
                
                calendarDays.innerHTML = '';

                for (let i = 0; i < firstDay.getDay(); i++) {
                    calendarDays.appendChild(document.createElement('div'));
                }

                for (let day = 1; day <= lastDay.getDate(); day++) {
                    const dayElement = document.createElement('div');
                    dayElement.classList.add('day');
                    dayElement.textContent = day;
                    dayElement.setAttribute('role', 'button');
                    dayElement.setAttribute('aria-label', `${day} de ${currentMonthElement.textContent}`);
                    dayElement.addEventListener('click', () => selectDate(new Date(year, month, day)));
                    calendarDays.appendChild(dayElement);
                }

                updateButtonStates();
            }

            function selectDate(date) {
                selectedDate = date;
                document.querySelectorAll('.day').forEach(day => {
                    day.classList.remove('selected');
                    day.setAttribute('aria-pressed', 'false');
                    if (day.textContent == date.getDate() && date.getMonth() == currentDate.getMonth()) {
                        day.classList.add('selected');
                        day.setAttribute('aria-pressed', 'true');
                    }
                });
                updateButtonStates();
            }

            function updateButtonStates() {
                const isDateSelected = selectedDate !== null;
                scheduleButton.disabled = !isDateSelected;
                cancelButton.disabled = !isDateSelected;
            }

            prevMonthButton.addEventListener('click', () => {
                currentDate.setMonth(currentDate.getMonth() - 1);
                updateCalendar();
            });

            nextMonthButton.addEventListener('click', () => {
                currentDate.setMonth(currentDate.getMonth() + 1);
                updateCalendar();
            });

            scheduleButton.addEventListener('click', () => {
                if (selectedDate) {
                    alert(`Treino agendado para ${selectedDate.toLocaleDateString('pt-BR')}`);
                }
            });

            cancelButton.addEventListener('click', () => {
                if (selectedDate) {
                    alert(`Treino cancelado para ${selectedDate.toLocaleDateString('pt-BR')}`);
                }
            });

            updateCalendar();
        });
    </script>
</body>
</html>
